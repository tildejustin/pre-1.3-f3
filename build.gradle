plugins {
	alias libs.plugins.fabric.loom
	alias libs.plugins.ploceus
	id "maven-publish"
}

version = mod_version
group = maven_group

base {
	archivesName = archives_name
}

loom {
	decompilers {
		vineflower {
			options.putAll(["mark-corresponding-synthetics": "1", "indent-string": "    "])
		}
	}
	mixin {
		useLegacyMixinAp = false
	}
	clientOnlyMinecraftJar()
}

afterEvaluate {
	tasks.named("genSourcesWithVineflower").configure {
		useCache = false
	}
}

ploceus {
	clientOnlyMappings()
}

dependencies {
	minecraft libs.minecraft
	mappings ploceus.featherMappings(libs.versions.feather.build.get())
	// nests ploceus.nests(libs.versions.nests.build.get())
	modImplementation libs.fabric.loader
	vineflowerDecompilerClasspath libs.vineflower
}

processResources {
	filesMatching "fabric.mod.json", {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release.set(8)
	}
}

java {
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
	withSourcesJar()
}

jar {
	from "LICENSE"
}

publishing {
	publications.create("mavenJava", MavenPublication) {
		from components.java
	}
	repositories {}
}
